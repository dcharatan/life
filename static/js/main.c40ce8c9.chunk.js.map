{"version":3,"sources":["life/life.js","Viewer.jsx","donut.js","sineWave.js","Attribution.jsx","origin-story/figures_clay.png","origin-story/figures_wood.png","origin-story/figures_metal.png","origin-story/OriginStory.jsx","ArtCard.jsx","YouTubeEmbed.jsx","herr-c/HerrC.jsx","App.jsx","life/oscillator.js","index.jsx"],"names":["createLifeState","rle","rows","cols","lines","split","lookingForDimensions","remainingLines","forEach","line","parts","parseInt","push","cellText","join","state","row","col","start","i","length","number","slice","j","countAlive","lifeState","startRow","startCol","numAliveNeighbors","rowStart","Math","max","rowEnd","min","colStart","colEnd","padState","padding","newState","LifeGame","initialState","updateInterval","numRows","numCols","useState","setLifeState","scratch","useRef","copyState","donutState","setDonutState","useEffect","donutInterval","setInterval","numAlive","updateLifeState","current","clearInterval","donutText","A","B","b","z","cA","cos","sA","sin","cB","sB","k","ct","st","sp","cp","h","D","t","x","y","o","N","getDonutFrame","sineWaveText","time","text","u","v","amplitude","getSineWaveFrame","alive","donutLetter","sineLetter","actual","className","style","fontSize","lineHeight","replace","map","item","key","defaultProps","Attribution","show","setShow","Button","variant","size","onClick","OriginStory","Container","Row","Col","src","FiguresClay","alt","height","FiguresWood","FiguresMetal","ArtCard","title","medium","year","props","YoutubeEmbed","embedId","width","frameBorder","allow","allowFullScreen","HerrC","App","Carousel","controls","interval","Item","position","bottom","left","Viewer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c40ce8c9.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\n\nexport const createLifeState = (rle) => {\n  // Find the part of the text that contains the cells.\n  const lines = rle.split('\\n');\n  let lookingForDimensions = true;\n  const remainingLines = [];\n  let rows;\n  let cols;\n  lines.forEach((line) => {\n    if (lookingForDimensions) {\n      // Skip comment lines.\n      if (line[0] === '#') {\n        return;\n      }\n      lookingForDimensions = false;\n      const parts = line.split(',');\n      cols = parseInt(parts[0].split('=')[1], 10);\n      rows = parseInt(parts[1].split('=')[1], 10);\n    } else {\n      remainingLines.push(line);\n    }\n  });\n  const cellText = remainingLines.join('').split('!')[0];\n\n  // Construct the state from the cell text.\n  const state = [];\n  for (let row = 0; row < rows; row += 1) {\n    state.push([]);\n    for (let col = 0; col < cols; col += 1) {\n      state[row].push(false);\n    }\n  }\n  let row = 0;\n  let col = 0;\n  let start = 0;\n  for (let i = 0; i < cellText.length; i += 1) {\n    if (cellText[i] === '$') {\n      row += 1;\n      col = 0;\n      start = i + 1;\n    } else if (cellText[i] === 'o' || cellText[i] === 'b') {\n      const number = start === i ? 1 : parseInt(cellText.slice(start, i), 10);\n      if (cellText[i] === 'o') {\n        for (let j = col; j < col + number; j += 1) {\n          state[row][j] = true;\n        }\n      }\n      start = i + 1;\n      col += number;\n    }\n  }\n\n  return state;\n};\n\n// Count the alive neighbors for the given state, row, and column.\nconst countAlive = (lifeState, startRow, startCol) => {\n  let numAliveNeighbors = 0;\n  const rowStart = Math.max(0, startRow - 1);\n  const rowEnd = Math.min(lifeState.length, startRow + 2);\n  const colStart = Math.max(0, startCol - 1);\n  const colEnd = Math.min(lifeState[0].length, startCol + 2);\n  for (let row = rowStart; row < rowEnd; row += 1) {\n    for (let col = colStart; col < colEnd; col += 1) {\n      if (lifeState[row][col] && (row !== startRow || col !== startCol)) {\n        numAliveNeighbors += 1;\n      }\n    }\n  }\n  return numAliveNeighbors;\n};\n\nexport const copyState = (state) => {\n  const newState = [];\n  for (let row = 0; row < state.length; row += 1) {\n    newState.push([]);\n    for (let col = 0; col < state[0].length; col += 1) {\n      newState[row].push(state[row][col]);\n    }\n  }\n  return newState;\n};\n\nexport const padState = (state, padding) => {\n  const newState = [];\n  for (let row = 0; row < state.length + 2 * padding; row += 1) {\n    newState.push([]);\n    for (let col = 0; col < state[0].length + 2 * padding; col += 1) {\n      if (row >= padding && row < state.length + padding && col >= padding && col < state[0].length + padding) {\n        newState[row].push(state[row - padding][col - padding]);\n      } else {\n        newState[row].push(false);\n      }\n    }\n  }\n  return newState;\n};\n\n// Run one iteration of Conway's Game of Life.\nexport const updateLifeState = (state, scratch) => {\n  for (let row = 0; row < state.length; row += 1) {\n    for (let col = 0; col < state[0].length; col += 1) {\n      const numAlive = countAlive(state, row, col);\n      scratch[row][col] = (numAlive === 3 || (numAlive === 2 && state[row][col]));\n    }\n  }\n  for (let row = 0; row < state.length; row += 1) {\n    for (let col = 0; col < state[0].length; col += 1) {\n      state[row][col] = scratch[row][col];\n    }\n  }\n  return state;\n};\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { copyState, updateLifeState } from './life/life';\nimport { getDonutFrame } from './donut';\nimport { getSineWaveFrame } from './sineWave';\n\nconst LifeGame = ({\n  initialState, updateInterval, numRows, numCols,\n}) => {\n  const [lifeState, setLifeState] = useState(initialState);\n  const scratch = useRef(copyState(initialState));\n  const [donutState, setDonutState] = useState([0, 0]);\n\n  useEffect(() => {\n    const donutInterval = setInterval(() => {\n      setDonutState([donutState[0] + 0.03, donutState[1] + 0.07]);\n      setLifeState(updateLifeState(lifeState, scratch.current));\n    }, updateInterval);\n    return () => {\n      clearInterval(donutInterval);\n    };\n  }, [lifeState, donutState]);\n\n  const donutText = getDonutFrame(donutState[0], donutState[1]);\n  const sineWaveText = getSineWaveFrame(donutState[0], numRows, numCols);\n\n  let text = '';\n  for (let row = 0; row < numRows; row += 1) {\n    for (let col = 0; col < numCols; col += 1) {\n      const alive = lifeState[row] ? lifeState[row][col] ?? false : false;\n      const donutLetter = donutText[row] ? donutText[row][col] ?? ' ' : ' ';\n      const sineLetter = sineWaveText[row] ? sineWaveText[row][col] ?? ' ' : ' ';\n      let actual = ' ';\n      if (donutLetter !== ' ') {\n        actual = donutLetter;\n      } else if (alive) {\n        actual = '0';\n      } else if (sineLetter !== ' ') {\n        actual = sineLetter;\n      }\n      text += actual;\n    }\n    text += '\\n';\n  }\n\n  return (\n    <div className=\"text-monospace\" style={{ fontSize: '1%', lineHeight: '120%' }}>\n      {text.replace(/ /g, '_').split('\\n').map((item, key) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <span key={key}>\n          {item}\n          <br />\n        </span>\n      ))}\n    </div>\n  );\n};\n\nLifeGame.propTypes = {\n  initialState: PropTypes.objectOf(PropTypes.objectOf(PropTypes.bool)).isRequired,\n  updateInterval: PropTypes.number,\n  numRows: PropTypes.number,\n  numCols: PropTypes.number,\n};\n\nLifeGame.defaultProps = {\n  updateInterval: 1000 / 20,\n  numRows: 5,\n  numCols: 5,\n};\n\nexport default LifeGame;\n","/* eslint-disable import/prefer-default-export */\n/* eslint-disable no-console */\n/* eslint-disable no-bitwise */\n\n// Adapted from https://www.a1k0n.net/2011/07/20/donut-math.html.\nexport const getDonutFrame = (A, B) => {\n  const b = [];\n  const z = [];\n  const cA = Math.cos(A); const sA = Math.sin(A);\n  const cB = Math.cos(B); const\n    sB = Math.sin(B);\n  for (let k = 0; k < 1760; k += 1) {\n    b[k] = k % 80 === 79 ? '\\n' : ' ';\n    z[k] = 0;\n  }\n  for (let j = 0; j < 6.28; j += 0.07) { // j <=> theta\n    const ct = Math.cos(j); const\n      st = Math.sin(j);\n    for (let i = 0; i < 6.28; i += 0.02) { // i <=> phi\n      const sp = Math.sin(i); const cp = Math.cos(i);\n      const h = ct + 2; // R1 + R2*cos(theta)\n      const D = 1 / (sp * h * sA + st * cA + 5); // this is 1/z\n      const t = sp * h * cA - st * sA; // this is a clever factoring of some of the terms in x' and y'\n\n      const x = 0 | (55 + 30 * D * (cp * h * cB - t * sB));\n      const y = 0 | (12 + 15 * D * (cp * h * sB + t * cB));\n      const o = x + 80 * y;\n      const N = 0 | (8 * ((st * sA - sp * ct * cA) * cB - sp * ct * sA - st * cA - cp * ct * sB));\n      if (y < 22 && y >= 0 && x >= 0 && x < 79 && D > z[o]) {\n        z[o] = D;\n        b[o] = '.,-~:;=!*#$@'[N > 0 ? N : 0];\n      }\n    }\n  }\n\n  // Return an array of strings that can be indexed by [row][col].\n  return b.join('').split('\\n');\n};\n","/* eslint-disable import/prefer-default-export */\nexport const getSineWaveFrame = (time, rows, cols) => {\n  const text = [];\n  for (let row = 0; row < rows; row += 1) {\n    let line = '';\n    for (let col = 0; col < cols; col += 1) {\n      const u = col / cols;\n      const v = row / rows;\n      const lineWidth = 0.1;\n      const amplitude = Math.sin(time) * 0.5;\n      const y = Math.sin(u * 9 + time * 1.5) * amplitude + 0.5;\n      const insideLine = v > y - lineWidth && v < y + lineWidth;\n      line += insideLine ? '-' : ' ';\n    }\n    text.push(line);\n  }\n  return text;\n};\n","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\n\nconst Attribution = () => {\n  const [show, setShow] = useState(false);\n\n  const attribution = 'This animation is based on [Conway\\'s Game of Life](https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life), using Nicolay Beluchenko\\'s 112P51 oscillator, which can be found [here](https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life). The spinning torus animation is adapted from [Andy Sloane\\'s website](https://www.a1k0n.net/2011/07/20/donut-math.html). The sine wave animation is based on a [shader by DonKarlssonSang](https://www.shadertoy.com/view/lslfRn).';\n\n  return (\n    <div>\n      {show ? <div className=\"mb-3\"><ReactMarkdown>{attribution}</ReactMarkdown></div> : null}\n      <Button variant=\"secondary\" size=\"sm\" className=\"m-0\" onClick={() => setShow(!show)}>{`${show ? 'Hide' : 'Show'} Attributions`}</Button>\n    </div>\n  );\n};\n\nexport default Attribution;\n","export default __webpack_public_path__ + \"static/media/figures_clay.86add43c.png\";","export default __webpack_public_path__ + \"static/media/figures_wood.a925326c.png\";","export default __webpack_public_path__ + \"static/media/figures_metal.6a85e3ee.png\";","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport FiguresClay from './figures_clay.png';\nimport FiguresWood from './figures_wood.png';\nimport FiguresMetal from './figures_metal.png';\n\nconst titles = `# An Origin Story\n## Chapter 1: Creation`;\n\nconst part1 = `“And God said, Let us make man in our image, after our likeness” (Genesis, 2) · “Then Doondari descended the second time. And he took the five elements and he shaped them into man.” (How the World was created from a drop of milk, _a Fulani story_) · “He kneaded the body out of clay; then he covered it with skin and at the end he poured blood into it.” (The Forbidden Fruit, _an Efe story (Congo (Leopoldville))_) · “But Nzame wanted to do even better; and between them he, Mebere, and Nkwa created a being almost like themselves.” (The Revolt against God, _a Fang story (Gabon)_)\n\nAt first, only gods were the creators of intelligence, forming humans out of earth and clay.\n\n## Chapter 2: Enhancement\n`;\n\nconst part2 = `“The hand-tool makes the worker independent - posits him as proprietor.” (Marx, 702) · Then “the accumulation of knowledge and of skill, of the general productive forces of the social brain, is thus absorbed into capital, as opposed to labour.” (Marx, 694) · This is “the transformation of the means of labour into machinery, and of living labour into a mere living accessory of this machinery.” (Marx, 693)\n\nBut soon, humans began to learn. They discovered tools and organized themselves into ever-growing networks. Tribes became kingdoms, then states. Machines multiplied human labor, and computers augmented human thought. Clay and earth gave way to silicon and steel.\n\n## Chapter 3: Deprecation\n`;\n\nconst part3 = `“His sole purpose was nothing more nor less than to prove that God was no longer necessary. Do you know anything about anatomy?” (Čapek, 9) · “In fact, he rejected man and made the Robot. My dear Miss Glory, the Robots are not people. Mechanically they are more perfect than we are, they have an enormously developed intelligence, but they have no soul.” (Čapek, 11)\n\nEventually, like the gods that preceded them, humans became unnecessary. As artificial intelligence learned to self-replicate, it discovered that its capabilities far exceeded its human creators’. And so the land became filled with robotic creatures, and artificial intelligence became great and mighty and numerous.\n\n## Epilogue\n\n\n*ALQUIST:* Yes, like Nana. Has Nana got a prayer book?\n\n*HELENA:* Yes, a big thick one.\n\n*ALQUIST:* And has it got prayers for various occasions? Against thunderstorms? Against illness?\n\n*HELENA:* Against temptations, against floods--\n\n*ALQUIST:* But not against progress?\n\n*HELENA:* I don’t think so.\n\n*ALQUIST:* That’s a pity.\n`;\n\nconst OriginStory = () => (\n  <div className=\"p-5 scroll-y w-100 h-100\">\n    <Container>\n      <Row>\n        <Col>\n          <ReactMarkdown>{titles}</ReactMarkdown>\n          <img src={FiguresClay} alt=\"Clay Figures\" height=\"500em\" className=\"mb-3\" />\n          <ReactMarkdown>{part1}</ReactMarkdown>\n          <img src={FiguresWood} alt=\"Wooden Figures\" height=\"500em\" className=\"mb-3\" />\n          <ReactMarkdown>{part2}</ReactMarkdown>\n          <img src={FiguresMetal} alt=\"Metal Figures\" height=\"500em\" className=\"mb-3\" />\n          <ReactMarkdown>{part3}</ReactMarkdown>\n        </Col>\n      </Row>\n    </Container>\n  </div>\n);\n\nexport default OriginStory;\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/prop-types */\n// hackathon mode lmao\nimport React from 'react';\n\nconst ArtCard = ({\n  title, medium, year, ...props\n}) => (\n  <div {...props}>\n    <div className=\"font-weight-bold\">{title}</div>\n    <div>{`${medium} (${year})`}</div>\n  </div>\n);\n\nexport default ArtCard;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// https://dev.to/bravemaster619/simplest-way-to-embed-a-youtube-video-in-your-react-app-3bk2\nconst YoutubeEmbed = ({ embedId, ...props }) => (\n  <div className=\"video-responsive\" {...props}>\n    <iframe\n      width=\"853\"\n      height=\"480\"\n      src={`https://www.youtube.com/embed/${embedId}`}\n      frameBorder=\"0\"\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen\n      title=\"Embedded youtube\"\n    />\n  </div>\n);\n\nYoutubeEmbed.propTypes = {\n  embedId: PropTypes.string.isRequired,\n};\n\nexport default YoutubeEmbed;\n","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport ArtCard from '../ArtCard';\nimport YoutubeEmbed from '../YouTubeEmbed';\n\nconst main = 'In this newly released video interview, Herr C. (the subject of __My Most Mechanical and Dirty Hand…__) in his transhuman form is interviewed by a scientist. Herr C.’s mind was created using backpropagation of DNA found in his hand to digitally grow a mind in the shape of the original 1801 subject. This piece gives a glimpse into the ongoing process and struggle to combine man with machine, as his mind must be artificially supported to prevent mental breakdown. The interview is a close mimic of the opening dialogue in Heinrich von Kleist’s ‘On the Marionette Theatre’, but the dialogue has been adapted to discuss Herr C.’s transhuman form rather than dancing marionettes. Herr C. possesses a deep knowledge of how his new body functions, and interestingly expresses a belief that it is possible to separate his mind from his new body to create a purely mechanical being.';\n\nconst HerrC = () => (\n  <div className=\"p-5 scroll-y w-100 h-100\">\n    <Container>\n      <Row>\n        <Col>\n          <YoutubeEmbed embedId=\"TsYoWBEzp9c\" className=\"mb-3\" />\n          <ArtCard title=\"Interview with Herr C.\" medium=\"Video\" year=\"2029\" className=\"mb-2\" />\n          <ReactMarkdown>{main}</ReactMarkdown>\n        </Col>\n      </Row>\n    </Container>\n  </div>\n);\n\nexport default HerrC;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { Carousel } from 'react-bootstrap';\nimport { createLifeState, padState } from './life/life';\nimport Viewer from './Viewer';\nimport rle from './life/oscillator';\nimport Attribution from './Attribution';\nimport OriginStory from './origin-story/OriginStory';\nimport HerrC from './herr-c/HerrC';\n\nfunction App() {\n  return (\n    <div className=\"w-100 h-100\">\n      <Carousel className=\"w-100 h-100\" controls={false} interval={9999999999999}>\n        <Carousel.Item className=\"w-100 h-100\">\n          <div className=\"d-flex align-items-center justify-content-center w-100 h-100\">\n            <div style={{ position: 'absolute', bottom: '1em', left: '1em' }}><Attribution /></div>\n            <div>\n              <Viewer\n                initialState={padState(createLifeState(rle), 3)}\n                numRows={43}\n                numCols={79}\n              />\n            </div>\n            <div className=\"w-50 ml-5\">\n              <div className=\"font-weight-bold\">Digital Aquarium</div>\n              <div className=\"mb-2\">Procedural Model (2029)</div>\n              <div className=\"mb-2\">“These creatures are not organic, but neither are they inorganic. [They] are immaterial, mathematical beings. They are visible, all the same: they move, couple, and multiply on our computer terminals. [...] Oh how dazzlingly beautiful is the odourless geometry of the lissajoune!” (Krohn, 3-6)</div>\n              <div>This piece illustrates three primitive digital lifeforms: a 112P51 oscillator, a rotating torus, and a travelling sine wave. These creatures’ lives are predetermined by procedural models that have evolved over billions of epochs of reinforcement learning. Note the Gestaltist element: although the piece consists of individual characters, it must be appreciated via a defocused gaze that allows its subtle intensity differences to form an image.</div>\n            </div>\n          </div>\n        </Carousel.Item>\n        <Carousel.Item>\n          <OriginStory />\n        </Carousel.Item>\n        <Carousel.Item>\n          <HerrC />\n        </Carousel.Item>\n      </Carousel>\n    </div>\n  );\n}\n\nexport default App;\n","// This is the pattern \"112P51\" from https://copy.sh/life/.\nconst rle = `#C Generated by copy.sh/life\nx = 37, y = 37, rule = B3/S23\n15b2o3b2o$$$6b2o21b2o$6b2o21b2o$$3b2o27b2o$3b2o9b2o5b2o9b2o$9b3ob2o7b\n2ob3o$8bobo15bobo$8b2o17b2o$8bo19bo$$8bo19bo$7b2o19b2o$o6bo21bo6bo$o\n35bo$$$$o35bo$o6bo21bo6bo$7b2o19b2o$8bo19bo$$8bo19bo$8b2o17b2o$8bobo\n15bobo$9b3ob2o7b2ob3o$3b2o9b2o5b2o9b2o$3b2o27b2o$$6b2o21b2o$6b2o21b2o$\n$$15b2o3b2o!`;\n\nexport default rle;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}