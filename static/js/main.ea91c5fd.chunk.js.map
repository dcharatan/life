{"version":3,"sources":["life/life.js","Viewer.jsx","donut.js","sineWave.js","Attribution.jsx","origin-story/figures_clay.png","origin-story/figures_wood.png","origin-story/figures_metal.png","origin-story/OriginStory.jsx","ArtCard.jsx","YouTubeEmbed.jsx","herr-c/HerrC.jsx","mechanical/mechanical.png","mechanical/Mechanical.jsx","jane/Jane1.png","jane/Jane2.png","jane/Jane.jsx","radio-brain/RadioBrain.jsx","trees/treeforclass.jpg","trees/Trees.jsx","dolls/paperdolls.jpg","dolls/Dolls.jsx","FancyTag.jsx","home/home.jpeg","home/Home.jsx","bibliography/Bibliography.jsx","App.jsx","life/oscillator.js","index.jsx"],"names":["createLifeState","rle","rows","cols","lines","split","lookingForDimensions","remainingLines","forEach","line","parts","parseInt","push","cellText","join","state","row","col","start","i","length","number","slice","j","countAlive","lifeState","startRow","startCol","numAliveNeighbors","rowStart","Math","max","rowEnd","min","colStart","colEnd","padState","padding","newState","LifeGame","initialState","updateInterval","numRows","numCols","useState","setLifeState","scratch","useRef","copyState","donutState","setDonutState","useEffect","donutInterval","setInterval","numAlive","updateLifeState","current","clearInterval","donutText","A","B","b","z","cA","cos","sA","sin","cB","sB","k","ct","st","sp","cp","h","D","t","x","y","o","N","getDonutFrame","sineWaveText","time","text","u","v","amplitude","getSineWaveFrame","alive","donutLetter","sineLetter","actual","className","style","fontSize","lineHeight","replace","map","item","key","defaultProps","Attribution","show","setShow","Button","variant","size","onClick","OriginStory","Container","Row","Col","src","FiguresClay","alt","height","FiguresWood","FiguresMetal","ArtCard","title","medium","year","props","YoutubeEmbed","embedId","width","frameBorder","allow","allowFullScreen","HerrC","Mechanical","MechanicalImage","Jane","Jane1","Jane2","RadioBrain","Trees","TreesImage","Dolls","DollsImage","FancyTag","children","Home","HomeImage","Bibliography","App","Carousel","controls","interval","Item","position","bottom","left","Viewer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea91c5fd.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\n\nexport const createLifeState = (rle) => {\n  // Find the part of the text that contains the cells.\n  const lines = rle.split('\\n');\n  let lookingForDimensions = true;\n  const remainingLines = [];\n  let rows;\n  let cols;\n  lines.forEach((line) => {\n    if (lookingForDimensions) {\n      // Skip comment lines.\n      if (line[0] === '#') {\n        return;\n      }\n      lookingForDimensions = false;\n      const parts = line.split(',');\n      cols = parseInt(parts[0].split('=')[1], 10);\n      rows = parseInt(parts[1].split('=')[1], 10);\n    } else {\n      remainingLines.push(line);\n    }\n  });\n  const cellText = remainingLines.join('').split('!')[0];\n\n  // Construct the state from the cell text.\n  const state = [];\n  for (let row = 0; row < rows; row += 1) {\n    state.push([]);\n    for (let col = 0; col < cols; col += 1) {\n      state[row].push(false);\n    }\n  }\n  let row = 0;\n  let col = 0;\n  let start = 0;\n  for (let i = 0; i < cellText.length; i += 1) {\n    if (cellText[i] === '$') {\n      row += 1;\n      col = 0;\n      start = i + 1;\n    } else if (cellText[i] === 'o' || cellText[i] === 'b') {\n      const number = start === i ? 1 : parseInt(cellText.slice(start, i), 10);\n      if (cellText[i] === 'o') {\n        for (let j = col; j < col + number; j += 1) {\n          state[row][j] = true;\n        }\n      }\n      start = i + 1;\n      col += number;\n    }\n  }\n\n  return state;\n};\n\n// Count the alive neighbors for the given state, row, and column.\nconst countAlive = (lifeState, startRow, startCol) => {\n  let numAliveNeighbors = 0;\n  const rowStart = Math.max(0, startRow - 1);\n  const rowEnd = Math.min(lifeState.length, startRow + 2);\n  const colStart = Math.max(0, startCol - 1);\n  const colEnd = Math.min(lifeState[0].length, startCol + 2);\n  for (let row = rowStart; row < rowEnd; row += 1) {\n    for (let col = colStart; col < colEnd; col += 1) {\n      if (lifeState[row][col] && (row !== startRow || col !== startCol)) {\n        numAliveNeighbors += 1;\n      }\n    }\n  }\n  return numAliveNeighbors;\n};\n\nexport const copyState = (state) => {\n  const newState = [];\n  for (let row = 0; row < state.length; row += 1) {\n    newState.push([]);\n    for (let col = 0; col < state[0].length; col += 1) {\n      newState[row].push(state[row][col]);\n    }\n  }\n  return newState;\n};\n\nexport const padState = (state, padding) => {\n  const newState = [];\n  for (let row = 0; row < state.length + 2 * padding; row += 1) {\n    newState.push([]);\n    for (let col = 0; col < state[0].length + 2 * padding; col += 1) {\n      if (row >= padding && row < state.length + padding && col >= padding && col < state[0].length + padding) {\n        newState[row].push(state[row - padding][col - padding]);\n      } else {\n        newState[row].push(false);\n      }\n    }\n  }\n  return newState;\n};\n\n// Run one iteration of Conway's Game of Life.\nexport const updateLifeState = (state, scratch) => {\n  for (let row = 0; row < state.length; row += 1) {\n    for (let col = 0; col < state[0].length; col += 1) {\n      const numAlive = countAlive(state, row, col);\n      scratch[row][col] = (numAlive === 3 || (numAlive === 2 && state[row][col]));\n    }\n  }\n  for (let row = 0; row < state.length; row += 1) {\n    for (let col = 0; col < state[0].length; col += 1) {\n      state[row][col] = scratch[row][col];\n    }\n  }\n  return state;\n};\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { copyState, updateLifeState } from './life/life';\nimport { getDonutFrame } from './donut';\nimport { getSineWaveFrame } from './sineWave';\n\nconst LifeGame = ({\n  initialState, updateInterval, numRows, numCols,\n}) => {\n  const [lifeState, setLifeState] = useState(initialState);\n  const scratch = useRef(copyState(initialState));\n  const [donutState, setDonutState] = useState([0, 0]);\n\n  useEffect(() => {\n    const donutInterval = setInterval(() => {\n      setDonutState([donutState[0] + 0.03, donutState[1] + 0.07]);\n      setLifeState(updateLifeState(lifeState, scratch.current));\n    }, updateInterval);\n    return () => {\n      clearInterval(donutInterval);\n    };\n  }, [lifeState, donutState]);\n\n  const donutText = getDonutFrame(donutState[0], donutState[1]);\n  const sineWaveText = getSineWaveFrame(donutState[0], numRows, numCols);\n\n  let text = '';\n  for (let row = 0; row < numRows; row += 1) {\n    for (let col = 0; col < numCols; col += 1) {\n      const alive = lifeState[row] ? lifeState[row][col] ?? false : false;\n      const donutLetter = donutText[row] ? donutText[row][col] ?? ' ' : ' ';\n      const sineLetter = sineWaveText[row] ? sineWaveText[row][col] ?? ' ' : ' ';\n      let actual = ' ';\n      if (donutLetter !== ' ') {\n        actual = donutLetter;\n      } else if (alive) {\n        actual = '0';\n      } else if (sineLetter !== ' ') {\n        actual = sineLetter;\n      }\n      text += actual;\n    }\n    text += '\\n';\n  }\n\n  return (\n    <div className=\"text-monospace\" style={{ fontSize: '1%', lineHeight: '120%' }}>\n      {text.replace(/ /g, '_').split('\\n').map((item, key) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <span key={key}>\n          {item}\n          <br />\n        </span>\n      ))}\n    </div>\n  );\n};\n\nLifeGame.propTypes = {\n  initialState: PropTypes.objectOf(PropTypes.objectOf(PropTypes.bool)).isRequired,\n  updateInterval: PropTypes.number,\n  numRows: PropTypes.number,\n  numCols: PropTypes.number,\n};\n\nLifeGame.defaultProps = {\n  updateInterval: 1000 / 20,\n  numRows: 5,\n  numCols: 5,\n};\n\nexport default LifeGame;\n","/* eslint-disable import/prefer-default-export */\n/* eslint-disable no-console */\n/* eslint-disable no-bitwise */\n\n// Adapted from https://www.a1k0n.net/2011/07/20/donut-math.html.\nexport const getDonutFrame = (A, B) => {\n  const b = [];\n  const z = [];\n  const cA = Math.cos(A); const sA = Math.sin(A);\n  const cB = Math.cos(B); const\n    sB = Math.sin(B);\n  for (let k = 0; k < 1760; k += 1) {\n    b[k] = k % 80 === 79 ? '\\n' : ' ';\n    z[k] = 0;\n  }\n  for (let j = 0; j < 6.28; j += 0.07) { // j <=> theta\n    const ct = Math.cos(j); const\n      st = Math.sin(j);\n    for (let i = 0; i < 6.28; i += 0.02) { // i <=> phi\n      const sp = Math.sin(i); const cp = Math.cos(i);\n      const h = ct + 2; // R1 + R2*cos(theta)\n      const D = 1 / (sp * h * sA + st * cA + 5); // this is 1/z\n      const t = sp * h * cA - st * sA; // this is a clever factoring of some of the terms in x' and y'\n\n      const x = 0 | (55 + 30 * D * (cp * h * cB - t * sB));\n      const y = 0 | (12 + 15 * D * (cp * h * sB + t * cB));\n      const o = x + 80 * y;\n      const N = 0 | (8 * ((st * sA - sp * ct * cA) * cB - sp * ct * sA - st * cA - cp * ct * sB));\n      if (y < 22 && y >= 0 && x >= 0 && x < 79 && D > z[o]) {\n        z[o] = D;\n        b[o] = '.,-~:;=!*#$@'[N > 0 ? N : 0];\n      }\n    }\n  }\n\n  // Return an array of strings that can be indexed by [row][col].\n  return b.join('').split('\\n');\n};\n","/* eslint-disable import/prefer-default-export */\nexport const getSineWaveFrame = (time, rows, cols) => {\n  const text = [];\n  for (let row = 0; row < rows; row += 1) {\n    let line = '';\n    for (let col = 0; col < cols; col += 1) {\n      const u = col / cols;\n      const v = row / rows;\n      const lineWidth = 0.1;\n      const amplitude = Math.sin(time) * 0.5;\n      const y = Math.sin(u * 9 + time * 1.5) * amplitude + 0.5;\n      const insideLine = v > y - lineWidth && v < y + lineWidth;\n      line += insideLine ? '-' : ' ';\n    }\n    text.push(line);\n  }\n  return text;\n};\n","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\n\nconst Attribution = () => {\n  const [show, setShow] = useState(false);\n\n  const attribution = 'This animation is based on [Conway\\'s Game of Life](https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life), using Nicolay Beluchenko\\'s 112P51 oscillator, which can be found [here](https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life). The spinning torus animation is adapted from [Andy Sloane\\'s website](https://www.a1k0n.net/2011/07/20/donut-math.html). The sine wave animation is based on a [shader by DonKarlssonSang](https://www.shadertoy.com/view/lslfRn).';\n\n  return (\n    <div>\n      {show ? <div className=\"mb-3\"><ReactMarkdown>{attribution}</ReactMarkdown></div> : null}\n      <Button variant=\"secondary\" size=\"sm\" className=\"m-0\" onClick={() => setShow(!show)}>{`${show ? 'Hide' : 'Show'} Attributions`}</Button>\n    </div>\n  );\n};\n\nexport default Attribution;\n","export default __webpack_public_path__ + \"static/media/figures_clay.86add43c.png\";","export default __webpack_public_path__ + \"static/media/figures_wood.a925326c.png\";","export default __webpack_public_path__ + \"static/media/figures_metal.6a85e3ee.png\";","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport FiguresClay from './figures_clay.png';\nimport FiguresWood from './figures_wood.png';\nimport FiguresMetal from './figures_metal.png';\n\nconst titles = `# An Origin Story\n## Chapter 1: Creation`;\n\nconst part1 = `“And God said, Let us make man in our image, after our likeness” (Genesis, 2) · “Then Doondari descended the second time. And he took the five elements and he shaped them into man.” (How the World was created from a drop of milk, _a Fulani story_) · “He kneaded the body out of clay; then he covered it with skin and at the end he poured blood into it.” (The Forbidden Fruit, _an Efe story (Congo (Leopoldville))_) · “But Nzame wanted to do even better; and between them he, Mebere, and Nkwa created a being almost like themselves.” (The Revolt against God, _a Fang story (Gabon)_)\n\nAt first, only gods were the creators of intelligence, forming humans out of earth and clay.\n\n## Chapter 2: Enhancement\n`;\n\nconst part2 = `“The hand-tool makes the worker independent - posits him as proprietor.” (Marx, 702) · Then “the accumulation of knowledge and of skill, of the general productive forces of the social brain, is thus absorbed into capital, as opposed to labour.” (Marx, 694) · This is “the transformation of the means of labour into machinery, and of living labour into a mere living accessory of this machinery.” (Marx, 693)\n\nBut soon, humans began to learn. They discovered tools and organized themselves into ever-growing networks. Tribes became kingdoms, then states. Machines multiplied human labor, and computers augmented human thought. Clay and earth gave way to silicon and steel.\n\n## Chapter 3: Deprecation\n`;\n\nconst part3 = `“His sole purpose was nothing more nor less than to prove that God was no longer necessary. Do you know anything about anatomy?” (Čapek, 9) · “In fact, he rejected man and made the Robot. My dear Miss Glory, the Robots are not people. Mechanically they are more perfect than we are, they have an enormously developed intelligence, but they have no soul.” (Čapek, 11)\n\nEventually, like the gods that preceded them, humans became unnecessary. As artificial intelligence learned to self-replicate, it discovered that its capabilities far exceeded thosee of its human creators. And so the land became filled with robotic creatures, and artificial intelligence became great and mighty and numerous.\n\n## Epilogue\n\n\n*ALQUIST:* Yes, like Nana. Has Nana got a prayer book?\n\n*HELENA:* Yes, a big thick one.\n\n*ALQUIST:* And has it got prayers for various occasions? Against thunderstorms? Against illness?\n\n*HELENA:* Against temptations, against floods--\n\n*ALQUIST:* But not against progress?\n\n*HELENA:* I don’t think so.\n\n*ALQUIST:* That’s a pity.\n`;\n\nconst OriginStory = () => (\n  <div className=\"p-5 scroll-y w-100 h-100\">\n    <Container>\n      <Row>\n        <Col>\n          <ReactMarkdown>{titles}</ReactMarkdown>\n          <img src={FiguresClay} alt=\"Clay Figures\" height=\"500em\" className=\"mb-3\" />\n          <ReactMarkdown>{part1}</ReactMarkdown>\n          <img src={FiguresWood} alt=\"Wooden Figures\" height=\"500em\" className=\"mb-3\" />\n          <ReactMarkdown>{part2}</ReactMarkdown>\n          <img src={FiguresMetal} alt=\"Metal Figures\" height=\"500em\" className=\"mb-3\" />\n          <ReactMarkdown>{part3}</ReactMarkdown>\n        </Col>\n      </Row>\n    </Container>\n  </div>\n);\n\nexport default OriginStory;\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/prop-types */\n// hackathon mode lmao\nimport React from 'react';\n\nconst ArtCard = ({\n  title, medium, year, ...props\n}) => (\n  <div {...props}>\n    <div className=\"font-weight-bold\">{title}</div>\n    <div>{year ? `${medium} (${year})` : `${medium}`}</div>\n  </div>\n);\n\nexport default ArtCard;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// https://dev.to/bravemaster619/simplest-way-to-embed-a-youtube-video-in-your-react-app-3bk2\nconst YoutubeEmbed = ({ embedId, ...props }) => (\n  <div className=\"video-responsive\" {...props}>\n    <iframe\n      width=\"853\"\n      height=\"480\"\n      src={`https://www.youtube.com/embed/${embedId}`}\n      frameBorder=\"0\"\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen\n      title=\"Embedded youtube\"\n    />\n  </div>\n);\n\nYoutubeEmbed.propTypes = {\n  embedId: PropTypes.string.isRequired,\n};\n\nexport default YoutubeEmbed;\n","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport ArtCard from '../ArtCard';\nimport YoutubeEmbed from '../YouTubeEmbed';\n\nconst main = 'In this newly released video interview, Herr C. (the subject of __My Most Mechanical and Dirty Hand…__) in his transhuman form is interviewed by a scientist. Herr C.’s mind was created using backpropagation of DNA found in his hand to digitally grow a mind in the shape of the original 1801 subject. This piece gives a glimpse into the ongoing process and struggle to combine man with machine, as his mind must be artificially supported to prevent mental breakdown. The interview is a close mimic of the opening dialogue in Heinrich von Kleist’s ‘On the Marionette Theatre’, but the dialogue has been adapted to discuss Herr C.’s transhuman form rather than dancing marionettes. Herr C. possesses a deep knowledge of how his new body functions, and interestingly expresses a belief that it is possible to separate his mind from his new body to create a purely mechanical being.';\n\nconst HerrC = () => (\n  <div className=\"p-5 scroll-y w-100 h-100\">\n    <Container>\n      <Row>\n        <Col>\n          <YoutubeEmbed embedId=\"TsYoWBEzp9c\" className=\"mb-3\" />\n          <ArtCard title=\"Interview with Herr C.\" medium=\"Video\" year=\"2029\" className=\"mb-2\" />\n          <ReactMarkdown>{main}</ReactMarkdown>\n        </Col>\n      </Row>\n    </Container>\n  </div>\n);\n\nexport default HerrC;\n","export default __webpack_public_path__ + \"static/media/mechanical.e518b790.png\";","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport MechanicalImage from './mechanical.png';\nimport ArtCard from '../ArtCard';\n\nconst title = 'My Most Mechanical and Dirty Hand...';\n\nconst medium = '3D Printing';\nconst year = '2026';\n\nconst main = 'When scientists first mastered the human genome and mind replication in 2025, an entire new field of anthropology emerged which used ancient DNA and genetic samples to revive the minds and bodies of historical figures. An early subject of research was a man known simply as “Herr C.” who was a dancer at an opera house in 1801 Berlin. Herr C. was chosen because of opportunity: his body was well-preserved post-mortem, so scientists were able to extract genetic material from his hand and attempt revival. The first step in this process was the digital recreation of Herr C.’s hand, which was successfully performed in 2026. The model for his hand is shown in the piece above alongside a 3D printed version. The printed version is scaled to 10% of the original size and is shown in comparison to the now-discontinued U.S. quarter.';\n\nconst Mechanical = () => (\n  <div className=\"p-5 scroll-y w-100 h-100\">\n    <Container>\n      <Row>\n        <Col>\n          <img src={MechanicalImage} alt=\"Mechanical Hand\" height=\"350em\" className=\"mb-3\" />\n          <ArtCard title={title} medium={medium} year={year} className=\"mb-2\" />\n          <ReactMarkdown>{main}</ReactMarkdown>\n        </Col>\n      </Row>\n    </Container>\n  </div>\n);\n\nexport default Mechanical;\n","export default __webpack_public_path__ + \"static/media/Jane1.a52894fe.png\";","export default __webpack_public_path__ + \"static/media/Jane2.37208c6a.png\";","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport Jane1 from './Jane1.png';\nimport Jane2 from './Jane2.png';\nimport ArtCard from '../ArtCard';\n\nconst title = '### Jane Eykie (b. 1960)';\nconst secondTitle = 'IS EMBODIMENT NECESSARY TO UNDERSTAND ART?';\n\nconst medium = 'Digital piece, Photoshop, Google';\nconst year = '2021';\n\nconst p1 = 'In 1972, Hubert L. Dreyfus, wrote a chapter entitled, “The Role of the Body in Intelligent Behavior,” in What Computers Can’t Do: The Limits of Artificial Intelligence. He questions whether a body is required for intelligent behavior. He writes that, at the current moment, humans are better at pattern recognition than computers. To explain this, Dreyfus highlights the gestaltists, which hypothesize that the whole determines what counts as a part, and defines a gestalt as a whole that is perceived more than its parts. Dreyfus says that computers have a hard time recognizing complex patterns, especially because they lack bodies. He concludes, “pattern recognition is a bodily skill basic to all intelligent behavior, the question of whether artificial intelligence is possible boils down to the question of whether there can be an artificially embodied agent” (Dreyfus 250). ';\nconst p2 = 'How does the gestalt theory connect to art and AI’s perception of art? Does an AI have to be embodied to understand an art piece? This experimental piece uses Photoshop and Google’s reverse image search to ask these questions. In the art piece, many pixels are removed from a famous Renaissance art piece — the Arnolfini Portrait by Jan van Eyck. It is then entered into Google’s reverse image search. In this stage of the image, an embodied human can definitely still ascertain the identity of this painting. But could one of the most powerful search engines — Google — do so? Google does indeed identify that the painting is by Jan van Eyck, however, does not identify the exact painting. In the next step of the artistic inquiry, the artist uses Photoshop’s smart “spot healing brush” to fill in the parts of the painting that are missing. This tool works by identifying surrounding patterns and calculating the pattern that would probably fit in a selected area. This tool worked somewhat well — it definitely morphed the image but provided almost a full painting. The artist then put this reconstructed image into the Google search engine again. This time, Google successfully both identifies the painting’s name and artist. ';\nconst p3 = 'This process tells us a few things. First, in 2021, computer tools existed that could both recognize a pattern and perhaps understand an image as a whole. Moreover, the computer processes were more powerful when combined. A new program could have been created to reach this result automatically by utilizing these two programs together. Overall, the two computer programs utilized in this experiment completed the challenges posed to them; they used existing patterns to identify a whole and gave meaning to a whole that went beyond the composition of its parts. And the computer programs did this without being embodied. ';\nconst p4 = 'Would Dreyfus have predicted this result? Almost 50 years after Dreyfus wrote his book, computers had become exponentially more sophisticated and advanced. This experiment shows that a larger pattern and understanding of a portrait occurred without a body — disproving Dreyfus’s hypothesis.';\nconst p5 = 'However, what this doesn’t tell us is whether computers can feel the creativity and emotions that paintings evoke. Is a body still necessary to grasp the purpose of art and to analyze art? Art isn’t about calculating or identifying a piece as a whole, however, combining the powers with an embodied human can aid a human in understanding a piece on a deeper level.';\n\nconst Jane = () => (\n  <div className=\"p-5 scroll-y w-100 h-100\">\n    <Container>\n      <Row>\n        <Col>\n          <img src={Jane1} alt=\"Jane1\" height=\"650em\" className=\"mb-3\" />\n          <img src={Jane2} alt=\"Jane2\" height=\"650em\" className=\"mb-3\" />\n          <ReactMarkdown>{title}</ReactMarkdown>\n          <ArtCard title={secondTitle} medium={medium} year={year} className=\"mb-2\" />\n          <ReactMarkdown>{p1}</ReactMarkdown>\n          <ReactMarkdown>{p2}</ReactMarkdown>\n          <ReactMarkdown>{p3}</ReactMarkdown>\n          <ReactMarkdown>{p4}</ReactMarkdown>\n          <ReactMarkdown>{p5}</ReactMarkdown>\n        </Col>\n      </Row>\n    </Container>\n  </div>\n);\n\nexport default Jane;\n","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport ArtCard from '../ArtCard';\nimport YoutubeEmbed from '../YouTubeEmbed';\n\nconst title = '### Radiobrain';\nconst secondTitle = 'Creep (1995)';\n\nconst medium = 'Video: Guitar, Digital Pedal, Amplifier, Camera';\n\nconst p1 = 'Michael Polanyi once said, “while we rely on a tool or a probe, they are not handled as external objects … they remain on our side … forming part of ourselves, the operating persons. We pour ourselves out into them and assimilate them as parts of our existence” (Dreyfus 252).';\nconst p2 = 'The creation of music occurs when a human adopts an instrument as a part of their own — they play their feelings, emotion, and rhythm to the world through this extension of their own body. Is artificially processed music still music? Are humans capable of assimilating artificially processed music machines into our own being, like analog instruments, to create new music that wasn’t possible before? Is combining artificial elements of music to our own bodies a way of becoming transhuman? As FM-2030 said, humans are finite beings. How will posthumanism change music? Do only humans have the ability to create music? Do you need humanity to be creative?';\nconst p3 = 'This music piece explores these questions and depicts how computers can augment the creative abilities and potential of humans. As the human plays an instrument as an extension of their own being, the artificial music processing pedal (which produces the drums and guitar loop) additionally becomes an extension of their own being. In a way, this process is transhuman. As technology and humans progress, and as we near the singularity, the limits of music expand as transhumanism allows new forms of creativity.';\n\nconst RadioBrain = () => (\n  <div className=\"p-5 scroll-y w-100 h-100\">\n    <Container>\n      <Row>\n        <Col>\n          <YoutubeEmbed embedId=\"UHQA_VlB3GA\" className=\"mb-3\" />\n          <ReactMarkdown>{title}</ReactMarkdown>\n          <ArtCard title={secondTitle} medium={medium} className=\"mb-2\" />\n          <ReactMarkdown>{p1}</ReactMarkdown>\n          <ReactMarkdown>{p2}</ReactMarkdown>\n          <ReactMarkdown>{p3}</ReactMarkdown>\n        </Col>\n      </Row>\n    </Container>\n  </div>\n);\n\nexport default RadioBrain;\n","export default __webpack_public_path__ + \"static/media/treeforclass.2a58e8a4.jpg\";","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport TreesImage from './treeforclass.jpg';\nimport ArtCard from '../ArtCard';\n\nconst title = '### Unknown (2010)';\n\nconst secondTitle = 'The Dance of the Trees';\n\nconst medium = 'Mixed-Media Oil Paint Pens on Paper and Adobe Photoshop';\n\nconst p1 = 'Macfarlane’s “The Understorey\" describes the hive mind of trees, the way that a forest is like a social network. This piece reimagines this hive mind and network in the style of Henri Matisse’s The Dance, replacing the rejoicing people in the circle with simple trees. The image of the conjoined trees, holding barks like hands, connected and mobile, emphasizes the liveliness of these creatures. This very vitality is a reflection of their intelligence, of the hive mind, of the way that these dense trees have a consciousness not unlike ours. Their bark like skin, their sap like blood, their leaves like hair. These trees reflect a possibility of our own intelligence, a nonhierarchical system, both natural and alien. This piece draws upon the historical conceptions of nature and mutualism, adapted to a human art piece.';\nconst p2 = 'The wood wide web, as it’s known, brings forth questions of consciousness and the way that we identify “the mind.” Minsky, in the Society of Mind, describes “communities grow mental worlds (31).” Indeed, a community, as it’s seen in Matisse’s the Dance, is a matter of minds meeting. That’s the case of these forest communities, which communicate to each other through fungus, through soil. Consider the way that humans are connected to each other, open your mind to what’s possible for other ecosystems. These trees are alive, and they think so too. ';\n\nconst Trees = () => (\n  <div className=\"p-5 scroll-y w-100 h-100\">\n    <Container>\n      <Row>\n        <Col>\n          <img src={TreesImage} alt=\"Trees\" height=\"400em\" className=\"mb-3\" />\n          <ReactMarkdown>{title}</ReactMarkdown>\n          <ArtCard title={secondTitle} medium={medium} className=\"mb-2\" />\n          <ReactMarkdown>{p1}</ReactMarkdown>\n          <ReactMarkdown>{p2}</ReactMarkdown>\n        </Col>\n      </Row>\n    </Container>\n  </div>\n);\n\nexport default Trees;\n","export default __webpack_public_path__ + \"static/media/paperdolls.50763e4d.jpg\";","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport DollsImage from './paperdolls.jpg';\nimport ArtCard from '../ArtCard';\n\nconst title = '### Unknown (2031)';\n\nconst secondTitle = 'Cybernetic Dolls';\n\nconst medium = 'Adobe Photoshop';\n\nconst text = `“A cyborg is a cybernetic organism, a hybrid of machine and organism, a creature of social reality as well as a creature of fiction (117).” Inspired by The Cyborg Manifesto, this collection of paper dolls and cybernetic additions explores the way that femininity has changed with transhumanism. Consider the way that Haraway describes the potential empowerment of the Cyborg existence, and the way that these technological augmentations fulfill that prophecy: a chip that can read minds, a cybernetic arm, a bionic eye that has x-ray vision.\n\nThe paper doll is a simple, traditional conception of femininity. A game for young creatures to think about the kinds of women they’ll look like when they’re older. This piece explores the possibilities of the singularity, once we become transhuman, post gender. “A cyborg world might be about lived social and bodily realities in which people are not afraid of their joint kinship with animals and machines, not afraid of permanently partial identities and contradictory standpoints” (122). This artwork demonstrates the new world Haraway dreamed of, the combination of animals and machines is a neutral part of life.\n\nThe simple pieces of clothing have little detail to them; they are abstracted shapes. The technological additions are more sophisticated. The doll is still made of paper, but her additions don’t have to be. This demonstrates the way that old conventions of femininity have flattened in the presence of these cybernetic additions. This piece asks you to consider the way that you conceptualize your own body, and where you can go as a transhuman.`;\n\nconst Dolls = () => (\n  <div className=\"p-5 scroll-y w-100 h-100\">\n    <Container>\n      <Row>\n        <Col>\n          <img src={DollsImage} alt=\"Dolls\" height=\"400em\" className=\"mb-3\" />\n          <ReactMarkdown>{title}</ReactMarkdown>\n          <ArtCard title={secondTitle} medium={medium} className=\"mb-2\" />\n          <ReactMarkdown>{text}</ReactMarkdown>\n        </Col>\n      </Row>\n    </Container>\n  </div>\n);\n\nexport default Dolls;\n","/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n\nconst FancyTag = ({ children, ...props }) => (\n  <span className=\"fancy px-2 font-weight-bold\">\n    {children}\n  </span>\n);\n\nexport default FancyTag;\n","export default __webpack_public_path__ + \"static/media/home.b84362bb.jpeg\";","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\nimport FancyTag from '../FancyTag';\nimport HomeImage from './home.jpeg';\n\nconst main = `This exhibition is a collection of works produced from 1995 to 2031 and includes physical, digital, visual, and auditory pieces. As humanity approaches the technological singularity, we look back to the past four decades seeking clues for how we got here and what may lie ahead. \n\nSome questions these conceptual artworks explore include:\n\n- What is the importance of the body in creativity and intelligence, and what differences or similarities exist between humans, robots, and cyborgs?\n\n- If humans can live digitally or be revived in virtual reality, what does this mean for our concepts about death? Have we created an afterlife?\n\n- How can AI and cybernetic parts create new opportunities for creativity? \n\n- What can be considered creativity? Can AI be creative, and if art can’t be distinguished as from an AI or from a human, what does that say about creativity or humanity?`;\n\nconst Home = () => (\n  <div className=\"p-5 scroll-y w-100 h-100\">\n    <Container>\n      <Row>\n        <Col>\n          <div className=\"w-100 d-flex justify-content-center align-items-center\">\n            <img src={HomeImage} alt=\"Home\" height=\"400em\" className=\"mb-3\" />\n            <div className=\"ml-5\">\n              <h1>\n                <FancyTag>Transhumanism</FancyTag>\n                {' '}\n                and the Intersection of Humanity, Technology, and Creativity\n              </h1>\n              <h2>Opening 2032</h2>\n            </div>\n          </div>\n          <div className=\"border p-5 my-5\">\n            <ReactMarkdown>{main}</ReactMarkdown>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport ReactMarkdown from 'react-markdown';\n\nconst title = '## Bibliography';\n\nconst main = `Donna Haraway, “A Cyborg Manifesto: Science, Technology, and Socialist-Feminism in the Late 20th Century” (1985), pp. 117-147.\n\n_Fm-2030: [Are You Transhuman?](https://www.youtube.com/watch?v=eaS9QBdVHMs&t=4s)_, 2013. \n\nHeinrich von Kleist, “On the Marionette Theatre” (1810), pp. 22-24.\n\nHolly Case. “Creation Narratives-Selection” (2021), pp. 1-4.\n\nHubert L. Dreyfus, “The Role of the Body in Intelligent Behavior,” in _What Computers Can’t Do: The Limits of Artificial Intelligence (1972)_, pp. 235-255.\n\nKarl Marx. _Fundamentals of a Critique of Political Economy_, Notebook VI (1857-8), pp. 693-702.\n\nKarel Čapek. “Rossum’s Universal Robots” (1920), pp. 9-11. \n\nLeena Krohn. “Gorgonoids” (1992), pp. 3-6. \n\nMarvin Minsky, “The Society of Mind,” in The Personalist Forum (1987), pp. 19-32. \n\nRobert Macfarlane, “The Understorey,” in Underland: A Deep Time Journey (2019), pp. 87-98.`;\n\nconst Bibliography = () => (\n  <div className=\"p-5 scroll-y w-100 h-100\">\n    <Container>\n      <Row>\n        <Col>\n          <ReactMarkdown>{title}</ReactMarkdown>\n          <ReactMarkdown>{main}</ReactMarkdown>\n        </Col>\n      </Row>\n    </Container>\n  </div>\n);\n\nexport default Bibliography;\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { Carousel } from 'react-bootstrap';\nimport { createLifeState, padState } from './life/life';\nimport Viewer from './Viewer';\nimport rle from './life/oscillator';\nimport Attribution from './Attribution';\nimport OriginStory from './origin-story/OriginStory';\nimport HerrC from './herr-c/HerrC';\nimport Mechanical from './mechanical/Mechanical';\nimport Jane from './jane/Jane';\nimport RadioBrain from './radio-brain/RadioBrain';\nimport Trees from './trees/Trees';\nimport Dolls from './dolls/Dolls';\nimport Home from './home/Home';\nimport Bibliography from './bibliography/Bibliography';\n\nfunction App() {\n  return (\n    <div className=\"w-100 h-100\">\n      <Carousel className=\"w-100 h-100\" controls={false} interval={9999999999999}>\n\n        <Carousel.Item>\n          <Home />\n        </Carousel.Item>\n        <Carousel.Item className=\"w-100 h-100\">\n          <div className=\"d-flex align-items-center justify-content-center w-100 h-100\">\n            <div style={{ position: 'absolute', bottom: '1em', left: '1em' }}><Attribution /></div>\n            <div>\n              <Viewer\n                initialState={padState(createLifeState(rle), 3)}\n                numRows={43}\n                numCols={79}\n              />\n            </div>\n            <div className=\"w-50 ml-5\">\n              <div className=\"font-weight-bold\">Digital Aquarium</div>\n              <div className=\"mb-2\">Procedural Model (2029)</div>\n              <div className=\"mb-2\">“These creatures are not organic, but neither are they inorganic. [They] are immaterial, mathematical beings. They are visible, all the same: they move, couple, and multiply on our computer terminals. [...] Oh how dazzlingly beautiful is the odourless geometry of the lissajoune!” (Krohn, 3-6)</div>\n              <div>This piece illustrates three primitive digital lifeforms: a 112P51 oscillator, a rotating torus, and a travelling sine wave. These creatures’ lives are predetermined by procedural models that have evolved over billions of epochs of reinforcement learning. Note the Gestaltist element: although the piece consists of individual characters, it must be appreciated via a defocused gaze that allows its subtle intensity differences to form an image.</div>\n            </div>\n          </div>\n        </Carousel.Item>\n        <Carousel.Item>\n          <OriginStory />\n        </Carousel.Item>\n        <Carousel.Item>\n          <Mechanical />\n        </Carousel.Item>\n        <Carousel.Item>\n          <HerrC />\n        </Carousel.Item>\n        <Carousel.Item>\n          <Jane />\n        </Carousel.Item>\n        <Carousel.Item>\n          <RadioBrain />\n        </Carousel.Item>\n        <Carousel.Item>\n          <Trees />\n        </Carousel.Item>\n        <Carousel.Item>\n          <Dolls />\n        </Carousel.Item>\n        <Carousel.Item>\n          <Bibliography />\n        </Carousel.Item>\n      </Carousel>\n    </div>\n  );\n}\n\nexport default App;\n","// This is the pattern \"112P51\" from https://copy.sh/life/.\nconst rle = `#C Generated by copy.sh/life\nx = 37, y = 37, rule = B3/S23\n15b2o3b2o$$$6b2o21b2o$6b2o21b2o$$3b2o27b2o$3b2o9b2o5b2o9b2o$9b3ob2o7b\n2ob3o$8bobo15bobo$8b2o17b2o$8bo19bo$$8bo19bo$7b2o19b2o$o6bo21bo6bo$o\n35bo$$$$o35bo$o6bo21bo6bo$7b2o19b2o$8bo19bo$$8bo19bo$8b2o17b2o$8bobo\n15bobo$9b3ob2o7b2ob3o$3b2o9b2o5b2o9b2o$3b2o27b2o$$6b2o21b2o$6b2o21b2o$\n$$15b2o3b2o!`;\n\nexport default rle;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}